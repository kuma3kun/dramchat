'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('../lib/bcdice.ruby.js');

var _opal = require('./opal');

var _opal2 = _interopRequireDefault(_opal);

var _DiceBot = require('./DiceBot');

var _DiceBot2 = _interopRequireDefault(_DiceBot);

var _utilities = require('./utilities');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DiceBotLoader = function () {
    _createClass(DiceBotLoader, null, [{
        key: 'loadUnknownGame',
        value: function loadUnknownGame(gameTitle) {
            var diceBot = (0, _opal2.default)(function (Opal) {
                return Opal.DiceBotLoader.$loadUnknownGame(gameTitle);
            });
            if ((0, _utilities.isNil)(diceBot)) return null;

            return new _DiceBot2.default(diceBot);
        }
    }, {
        key: 'collectDiceBots',
        value: function collectDiceBots() {
            return (0, _opal2.default)(function (Opal) {
                return Opal.DiceBotLoader.$collectDiceBots().map(function (diceBot) {
                    return new _DiceBot2.default(diceBot);
                });
            });
        }
    }]);

    function DiceBotLoader(diceBotLoader) {
        _classCallCheck(this, DiceBotLoader);

        this._diceBotLoader = diceBotLoader;
    }

    _createClass(DiceBotLoader, [{
        key: 'match',
        value: function match() {
            var _this = this;

            return (0, _opal2.default)(function () {
                return _this._diceBotLoader.$match();
            });
        }
    }, {
        key: 'loadDiceBot',
        value: function loadDiceBot() {
            var _this2 = this;

            var diceBot = (0, _opal2.default)(function () {
                return _this2._diceBotLoader.$loadDiceBot();
            });
            return new _DiceBot2.default(diceBot);
        }
    }]);

    return DiceBotLoader;
}();

exports.default = DiceBotLoader;
//# sourceMappingURL=DiceBotLoader.js.map